# I use package renaming to import 2 libraries with the same name but from different sources (1 for SGX and 1 for regular std)
# Then in the code you can rename them back (under a cfg condition) to the same name to use abstractly.

[package]
name = "enigma-crypto"
version = "0.3.0"
authors = ["Elichai Turkel <elichai@enigma.co>"]
edition = "2018"
description = "A Cryptography library used for easy usage in the Enigma Protocol."

[dependencies]
enigma-types = { path = "../enigma-types" }
rustc-hex = { version = "2.0.1", default-features = false }
failure = { version = "0.1", default-features = false, features = ["derive"] }

tiny-keccak = { version = "1.4", optional = true }
sha2 = { version = "0.8.0", default-features = false, optional = true }
libsecp256k1 = { version = "0.2", optional = true }
ring = { git = "https://github.com/elichai/ring.git", rev = "sgx-0.14.6", default-features = false, optional = true }

rand_std = { package = "rand", version = "0.6.4", optional = true }

sgx_tstd = { git = "https://github.com/baidu/rust-sgx-sdk.git", rev = "v1.0.9", optional = true }
sgx_trts = { git = "https://github.com/baidu/rust-sgx-sdk.git", rev = "v1.0.9", optional = true }
sgx_types = { git = "https://github.com/baidu/rust-sgx-sdk.git", rev = "v1.0.9", optional = true }


# Right now symmetric encryption requires regular std or sgx std.
[features]
default = ["std", "symmetric", "asymmetric", "hash"]
asymmetric = ["libsecp256k1", "hash"]
hash = ["sha2", "tiny-keccak"]
symmetric = []
# both regular std and sgx will import symmetric encryption.
std = ["rand_std", "enigma-types/std", "ring/default", "symmetric"]
sgx = ["sgx_trts", "sgx_tstd", "sgx_types", "enigma-types/sgx", "ring/sgx", "symmetric"]
